{"version":3,"sources":["Context/AuthReducer.js","Context/AuthContext.js","Pages/Signin.js","Pages/Signup.js","Components/Message.js","Components/AddAmigo.js","Components/ProfilePage.js","Components/SidebarChat.js","Components/EmptyChatRoom.js","Pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AuthReducer","state","action","type","user","payload","isLoading","error","INITIAL_STATE","JSON","parse","localStorage","getItem","isFetching","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","Signin","useState","email","setEmail","password","setPassword","setError","useContext","loginCall","userCredential","axios","post","API_URL","res","data","className","onSubmit","e","preventDefault","htmlFor","placeholder","name","required","onChange","target","minLength","disabled","CircularProgress","color","href","to","Signup","username","setUsername","photo","setPhoto","setIsLoading","history","useHistory","handleForm","config","headers","FormData","append","push","console","log","accept","files","size","Message","message","own","text","format","createdAt","AddAmigo","addchattoggler","addchattoggle","amigousername","setAmigoUsername","handleSubmit","get","response","senderId","_id","receiverId","window","location","reload","onClick","src","alt","ProfilePage","toggler","togglestate","updated_data","put","result","SidebarChat","chatroomtile","currentUser","setUser","online","setOnline","socket","useRef","current","io","amigoId","members","find","m","on","users","userId","a","getAmigodetails","EmptyChatRoom","Home","chatroomtiles","setChatroomtiles","currentchat","setCurrentchat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","amigo","setAmigo","open","setOpen","scrollRef","sender","Date","now","includes","prev","emit","getChatroomtiles","getMessages","scrollIntoView","behavior","pick","setPick","sendingMessage","chatroomId","member","addtoggle","setAddtoggle","addchatToggler","profiletoggle","setProfiletoggle","profiletoggler","IconButton","style","fontSize","removeItem","map","ref","onSelect","emoji","native","emojiSize","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fda217d1.chunk.js","sourcesContent":["const AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_START\":\r\n            return {\r\n                user: action.payload,\r\n                isLoading: true,\r\n                error: false\r\n            };\r\n        case \"LOGIN_SUCCESS\":\r\n            return {\r\n                user: action.payload,\r\n                isLoading: false,\r\n                error: false\r\n            };\r\n        case \"LOGIN_FAILURE\":\r\n            return {\r\n                user: null,\r\n                isLoading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer;","import { createContext, useEffect, useReducer } from \"react\"\r\nimport AuthReducer from \"./AuthReducer\"\r\n\r\nconst INITIAL_STATE = {\r\n    user:JSON.parse(localStorage.getItem(\"user\")) || null,\r\n    isFetching:false,\r\n    error:false\r\n}\r\n\r\n/* Reads the data from the Provider and changes INITIAL_STATE */\r\nexport const AuthContext = createContext(INITIAL_STATE)\r\n\r\n/* Children here are the Components that need to get the data.[In this Application we specified App COmponent as Child in index.js so that we can server every every component exist in the app */\r\n/* This will provide data to all the children that we are giving here */\r\nexport const AuthContextProvider = ({children}) =>{\r\n    const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"user\", JSON.stringify(state.user))\r\n      },[state.user])\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n        value={{\r\n            user:state.user,\r\n            isFetching:state.isFetching,\r\n            error:state.error,\r\n            dispatch\r\n        }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport './Signin-up.css'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { AuthContext } from '../Context/AuthContext'\r\n\r\nfunction Signin() {\r\n\r\n    const [email, setEmail] = useState()   /* Instead of Using useState hook we can use useRef and keep ref in the required input field for getting data */\r\n    const [password, setPassword] = useState()\r\n    const [error,setError] = useState(\"\")\r\n    const { isFetching, dispatch } = useContext(AuthContext)\r\n\r\n    const API_URL = \"http://localhost:5000/\";\r\n\r\n    const loginCall = async (userCredential, dispatch) => {\r\n        dispatch({ type: \"LOGIN_START\" });\r\n        try {\r\n            const res = await axios.post(API_URL+\"api/auth/signin\", userCredential);\r\n            dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\r\n        }\r\n        catch (err) {\r\n            dispatch({ type: \"LOGIN_FAILURE\", payload: err })\r\n            setError(\"Wrong Password Or Username\")\r\n        }\r\n    }\r\n\r\n    const handleForm = (e) => {\r\n        e.preventDefault()\r\n        loginCall({ email, password }, dispatch)\r\n    }\r\n\r\n    return (\r\n        <div className='signin-container'>\r\n            <div className=\"signin-card\">\r\n                <form onSubmit={handleForm}>\r\n                    <h2 className=\"signin-title\"> Log in</h2>\r\n                    <p className=\"line\"></p>\r\n                    <div className=\"error-message\"><p>{error}</p></div>\r\n                    <div className=\"signin-fields\">\r\n                        <label htmlFor=\"email\"> <b>Email</b></label>\r\n                        <input className='signin-textbox' type=\"email\" placeholder=\"Enter Email\" name=\"username\" required onChange={(e) => { setEmail(e.target.value) }} />\r\n                        <label htmlFor=\"password\"><b>Password</b></label>\r\n                        <input className='signin-textbox' type=\"password\" minLength='6' placeholder=\"Enter Password\" name=\"psw\" required onChange={(e) => { setPassword(e.target.value) }} />\r\n                    </div>\r\n                    <button className=\"signin-button\" disabled={isFetching}>{isFetching ? <CircularProgress color=\"#ffffff\" /> : \"Log In\"}</button>\r\n                    <a className=\"forget-pass\" href=\"#home\">Forgot password?</a>\r\n                </form>\r\n                <div className='signup-option'>\r\n                    <p className=\"signup-question\">Don't have an account? <Link to='/signup'>Sign Up</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Signin-up.css\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction Signup() {\r\n\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const [error,setError] = useState(\"\");\r\n  const [isLoading,setIsLoading] = useState(false)\r\n  const history = useHistory();\r\n\r\n  const API_URL = \"http://localhost:5000/\";\r\n\r\n  const handleForm = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true)\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const data = new FormData();\r\n    data.append(\"username\", username);\r\n    data.append(\"email\", email);\r\n    data.append(\"password\", password);\r\n\r\n    if (photo !== \"\") {\r\n      data.append(\"photo\", photo);\r\n    }\r\n\r\n    try {\r\n      await axios.post(API_URL+\"api/auth/signup\", data, config);\r\n      history.push(\"/signin\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(\"Username Already Exist\")\r\n    }\r\n    setIsLoading(false)\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <div className=\"signup-card\">\r\n        <form onSubmit={handleForm}>\r\n          <h2 className=\"signup-title\"> Register </h2>\r\n          <p className=\"line\"></p>\r\n          <div className=\"error-message\"><p>{error}</p></div>\r\n          <div className=\"signup-fields\">\r\n            <label htmlFor=\"username\"> {\" \"} <b>Username</b></label>\r\n            <input className=\"signup-textbox\" type=\"text\" placeholder=\"Enter Username\" name=\"username\" required onChange={(e) => { setUsername(e.target.value); }} />\r\n            <label htmlFor=\"email\">{\" \"}<b>Email</b></label>\r\n            <input className=\"signup-textbox\" type=\"email\" placeholder=\"Enter Email\" name=\"email\" required onChange={(e) => { setEmail(e.target.value); }} />\r\n            <label htmlFor=\"password\"> <b>Password</b></label>\r\n            <input className=\"signup-textbox\" type=\"password\" placeholder=\"Enter Password\" minLength=\"6\" name=\"psw\" required onChange={(e) => { setPassword(e.target.value); }} />\r\n            <label><b>Image(You can add Image later)</b></label>\r\n            <input className=\"file-input\" type=\"file\" accept=\".png, .jpg, .jpeg, .gif\" name=\"photo\" onChange={(e) => { setPhoto(e.target.files[0]); }} />\r\n          </div>\r\n          <button className=\"signup-button\" disabled={isLoading}>{isLoading ?<CircularProgress color=\"#ffffff\" size=\"18px\"/> : \"Sign Up\"}</button>\r\n        </form>\r\n        <div className=\"signup-option\">\r\n          <p className=\"signup-question\">\r\n            Have an account? <Link to=\"/signin\">Sign In</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from 'react'\r\nimport './Message.css'\r\nimport { format } from \"timeago.js\"\r\n\r\nfunction Message({message,own}) {\r\n    return (\r\n        <div>\r\n            <p className={own?'message-sent':'message-received'}>\r\n                <span>{message.text}</span>\r\n                <span className='message-time'>{format(message.createdAt)}</span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios';\r\nimport React, { useContext, useState } from 'react'\r\nimport { AuthContext } from '../Context/AuthContext';\r\nimport './AddAmigo.css'\r\n\r\nfunction AddAmigo({addchattoggler,addchattoggle}) {\r\n\r\n    const [amigousername, setAmigoUsername] = useState()\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const API_URL = \"http://localhost:5000/\";\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const response = await axios.get(`${API_URL}api/users/?username=${amigousername}`)\r\n            setAmigoUsername(\"\")\r\n            const data = {\r\n                senderId: user._id,\r\n                receiverId: response.data._id\r\n            }\r\n            await axios.post(API_URL+'api/chatrooms', data)\r\n        }\r\n        catch (err) {\r\n        }\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className='add-amigo-background'>\r\n            <div className={addchattoggle?\"add-amigo-open\":\"add-amigo-close\"}>\r\n                <div className=\"close-div\" ><span onClick={addchattoggler}><p className=\"close-symbol\">x</p></span></div>\r\n                <form>\r\n                    <img className='add-amigo-img' src='assets/addamigo.png' alt=''></img>\r\n                    <input type=\"text\" placeholder=\"Enter Username of Amigo\" value={amigousername} onChange={(e) => { setAmigoUsername(e.target.value) }} required />\r\n                    <button onClick={handleSubmit}>ADD AMIGO</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAmigo\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./ProfilePage.css\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nfunction ProfilePage({ toggler, togglestate }) {\r\n\r\n  const { user } = useContext(AuthContext);\r\n  const [username, setUsername] = useState(user.username)\r\n  const [photo, setPhoto] = useState(\"\")\r\n\r\n  const API_URL = \"http://localhost:5000/\";\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    const updated_data = new FormData();\r\n    updated_data.append(\"username\", username);\r\n    if (photo !== \"\") {\r\n      updated_data.append(\"photo\", photo);\r\n    }\r\n\r\n    try {\r\n      await axios.put(API_URL + 'api/users/' + user?._id, updated_data, config)\r\n      const result = await axios.get(API_URL+\"api/users/\"+user?._id)\r\n      const data = JSON.stringify(result.data)\r\n      localStorage.setItem(\"user\",data)\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n    }\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className={togglestate ? \"profile-card-open\" : \"profile-card-close\"}>\r\n        <div className=\"close-div\">\r\n          <span onClick={toggler}>\r\n            <p className=\"close-symbol\">x</p>\r\n          </span>\r\n        </div>\r\n        <img className=\"profile-image\" src={user?.photo ? API_URL+\"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt=\"\"></img>\r\n        <form>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input type=\"text\" className=\"username-input\" value={username} onChange={(e) => { setUsername(e.target.value) }} required></input>\r\n          <input\r\n            className=\"update-profilepic\"\r\n            type=\"file\"\r\n            accept=\".png, .jpg, .jpeg, .gif\"\r\n            name=\"photo\"\r\n            onChange={(e) => {\r\n              setPhoto(e.target.files[0]);\r\n            }}\r\n          />\r\n          <button onClick={handleSubmit}>UPDATE</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport './SidebarChat.css'\r\nimport axios from 'axios'\r\nimport { io } from \"socket.io-client\"\r\n\r\nfunction SidebarChat({ chatroomtile, currentUser }) {\r\n\r\n    const [user, setUser] = useState(null)\r\n    const [online, setOnline] = useState(false);\r\n    const socket = useRef()\r\n\r\n    const API_URL = \"http://localhost:5000/\";\r\n\r\n    useEffect(() => {\r\n        socket.current = io(API_URL);\r\n    }, [API_URL])\r\n\r\n    useEffect(() => {\r\n        const amigoId = chatroomtile.members.find((m) => m !== currentUser._id);\r\n        socket.current.on(\"getUsers\", (users) => {\r\n            setOnline(users.find((user) => user.userId === amigoId));\r\n        })\r\n        const getAmigodetails = async () => {\r\n            try {\r\n                const response = await axios.get(API_URL + 'api/users/' + amigoId)\r\n                setUser(response.data)\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        getAmigodetails()\r\n    }, [currentUser, chatroomtile, online, API_URL])\r\n\r\n    return (\r\n        <div className='sidebarchat'>\r\n            <img className='amigo-profilepic' src={user?.photo ? API_URL + \"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt='' />\r\n            <div className={online ? \"online\" : \"offile\"}></div>\r\n            <p className=\"sidebarchat-info-name\">{user != null ? user.username : \"\"}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat","import React from \"react\";\r\nimport \"./EmptyChatRoom.css\";\r\n\r\nfunction EmptyChatRoom() {\r\n  return (\r\n    <div>\r\n      <div className=\"EmptyChatroom\">\r\n        <img className=\"emptychatroom-img\"\r\n          src=\"assets/home.png\"\r\n          alt=\"\"\r\n        ></img>\r\n        <p className=\"empty-chatroom-mainhead\">Start Chatting with Your Amigo🤝</p>\r\n        <p className=\"empty-chatroom-subhead\">\r\n          Select an Amigo from the Sidebar and Start conversation.Add Amigos by\r\n          username from the option in the top right corner of the page\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyChatRoom;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport \"./HomeCSS/Home.css\";\r\nimport \"./HomeCSS/Sidebar.css\";\r\nimport \"./HomeCSS/ChatRoom.css\";\r\nimport Message from \"../Components/Message.js\";\r\nimport AddAmigo from \"../Components/AddAmigo.js\";\r\nimport ProfilePage from \"../Components/ProfilePage\";\r\nimport SidebarChat from \"../Components/SidebarChat.js\";\r\nimport EmptyChatRoom from \"../Components/EmptyChatRoom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\n\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\n\r\nfunction Home() {\r\n  const [chatroomtiles, setChatroomtiles] = useState([]);\r\n  const [currentchat, setCurrentchat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [amigo, setAmigo] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const { user } = useContext(AuthContext);\r\n  const scrollRef = useRef();\r\n  const socket = useRef();\r\n\r\n  const API_URL = \"http://localhost:5000/\";\r\n\r\n  /* Making Messages Realtime */\r\n\r\n  useEffect(() => {\r\n    socket.current = io(API_URL);\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, [API_URL]);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentchat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentchat]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", user?._id);\r\n  }, [user, chatroomtiles, currentchat, socket]);\r\n\r\n  /* Fetching the Chat Tiles */\r\n\r\n  useEffect(() => {\r\n    const getChatroomtiles = async () => {\r\n      try {\r\n        const res = await axios.get(API_URL + \"api/chatrooms/\" + user._id);\r\n        setChatroomtiles(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getChatroomtiles();\r\n  }, [user?._id, API_URL]);\r\n\r\n  /* Fetching the Chat Tile user details */\r\n\r\n  useEffect(() => {\r\n    const amigoId = currentchat?.members.find((m) => m !== user._id);\r\n    const getAmigodetails = async () => {\r\n      try {\r\n        const response = await axios.get(API_URL + \"api/users/\" + amigoId);\r\n        setAmigo(response.data);\r\n      } catch (err) { }\r\n    };\r\n    getAmigodetails();\r\n  }, [user, currentchat, API_URL]);\r\n\r\n  /* Fetching ChatRoom Messages */\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const response = await axios.get(API_URL + \"api/messages/\" + currentchat?._id);\r\n        setMessages(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentchat, API_URL]);\r\n\r\n  /* Scroll to the recent message */\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  /* Emoji Picker */\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setNewMessage(newMessage + emoji);\r\n  };\r\n  const [pick, setPick] = useState(false);\r\n  const openPicker = () => {\r\n    setPick(!pick);\r\n  };\r\n\r\n  /* Posting a Message */\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const sendingMessage = {\r\n      chatroomId: currentchat._id,\r\n      senderId: user._id,\r\n      text: newMessage,\r\n    };\r\n\r\n    const receiverId = currentchat.members.find(\r\n      (member) => member !== user._id\r\n    );\r\n\r\n    socket.current.emit(\"sendMessage\", {\r\n      senderId: user._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(API_URL + \"api/messages/\", sendingMessage);\r\n      setMessages([...messages, response.data]);\r\n      setNewMessage(\"\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setPick(false)\r\n  };\r\n\r\n  /* Logout */\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    window.location.reload();\r\n  };\r\n\r\n  /* AddChat Toggle Setup */\r\n\r\n  const [addtoggle, setAddtoggle] = useState(false);\r\n  const addchatToggler = () => {\r\n    addtoggle === false ? setAddtoggle(true) : setAddtoggle(false);\r\n    console.log(addtoggle);\r\n  };\r\n\r\n  /* Profile Page Toggle Setup */\r\n\r\n  const [profiletoggle, setProfiletoggle] = useState(false);\r\n  const profiletoggler = () => {\r\n    profiletoggle === false ? setProfiletoggle(true) : setProfiletoggle(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {/* Chat Adding Card */}\r\n      <AddAmigo addchattoggler={() => { addchatToggler(); }} addchattoggle={addtoggle} />\r\n\r\n      {/* Profile Page Card - Update */}\r\n      <ProfilePage toggler={() => { profiletoggler(); }} togglestate={profiletoggle} />\r\n\r\n      {/* Sidebar Open Menu */}\r\n      {open\r\n        ? \"\"\r\n        : <div className=\"menu-open\" onClick={() => { setOpen(true); }} >\r\n          <IconButton>\r\n            <MenuIcon style={{ fontSize: 35, color: \"#316af3\" }} />\r\n          </IconButton>\r\n        </div>\r\n      }\r\n\r\n      {/* Add Chat Icon */}\r\n      <div className=\"add-chatroom-icon\" onClick={addchatToggler}>\r\n        <IconButton>\r\n          <PersonAddIcon />\r\n        </IconButton>\r\n      </div>\r\n\r\n      {/* Sidebar, ChatRoom */}\r\n      <div className=\"home-components\">\r\n\r\n        {/* Sidebar */}\r\n        <div className={open ? \"sidebar active\" : \"sidebar\"}>\r\n          <div className=\"sidebar-header\">\r\n            <div className=\"menu-close\" onClick={() => { setOpen(false); }} >\r\n              <IconButton>\r\n                <CloseIcon style={{ fontSize: 35, color: \"white\" }} />\r\n              </IconButton>\r\n            </div>\r\n            <IconButton onClick={() => { profiletoggler(); }} >\r\n              <img className=\"user-profile-image\" src={user?.photo ? API_URL + \"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt='' />\r\n            </IconButton>\r\n            <div className=\"logout-option\">\r\n              <IconButton onClick={logout}>\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"sidebar-search\">\r\n            <div className=\"sidebar-search-container\">\r\n              <SearchIcon className=\"sidebar-searchicon\" />\r\n              <input type=\"text\" name=\"chat-search\" placeholder=\"Search a Chat\" />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Chatroom tiles */}\r\n\r\n          <div className=\"sidebar-chatoptions\">\r\n            {chatroomtiles.map((chatroomtile) => (\r\n              <div\r\n                key={chatroomtile?._id}\r\n                onClick={() => { setCurrentchat(chatroomtile); setOpen(false) }} >\r\n                <SidebarChat chatroomtile={chatroomtile} currentUser={user} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Chatroom */}\r\n        <div className=\"chatroom\">\r\n          {currentchat ? (\r\n            <>\r\n              <div className=\"chatroom-header\">\r\n                <div className=\"chatroom-chatinfo\">\r\n                  <img className='amigo-profilepic' src={amigo?.photo ? API_URL + \"photo/\" + amigo?.photo : \"assets/noavatar.jpg\"} alt='' />\r\n\r\n                  <div className=\"chatroom-chatinfo-right\">\r\n                    <div className=\"chatroom-chatinfo-name\">\r\n                      <p>{amigo?.username}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"chatroom-messages-container\" onClick={() => { setPick(false) }}>\r\n                {messages.map((message) => (\r\n                  <div key={message?._id} ref={scrollRef}>\r\n                    <Message message={message} own={message?.senderId === user._id} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className={pick ? \"emoji-picker-open\" : \"emoji-picker-close\"} >\r\n                <Picker onSelect={addEmoji} emojiSize={25} />\r\n              </div>\r\n              <div className=\"chatroom-footer\">\r\n                <div className=\"chatroom-footer-lefticons\">\r\n                  <IconButton onClick={openPicker}>\r\n                    <InsertEmoticonIcon />\r\n                  </IconButton>\r\n                  <IconButton>\r\n                    <AttachFileIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <form>\r\n                  <input className=\"message-input\" type=\"text\" name=\"message-input\" placeholder=\"Type a message\" onChange={(e) => { setNewMessage(e.target.value); }} value={newMessage} required />\r\n                  <button className=\"input-button\" onClick={newMessage ? handleSubmit : null} > Send a Message </button>\r\n                </form>\r\n                <div className=\"chatroom-footer-righticon\" onClick={newMessage ? handleSubmit : null} >\r\n                  <IconButton>\r\n                    <SendIcon className=\"send-icon\" />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <EmptyChatRoom />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import Signin from \"./Pages/Signin.js\"\r\nimport Signup from \"./Pages/Signup.js\"\r\nimport Home from \"./Pages/Home.js\"\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\r\nimport { useContext } from \"react\"\r\nimport { AuthContext } from \"./Context/AuthContext.js\"\r\n\r\nfunction App() {\r\n  \r\n  const { user } = useContext(AuthContext)\r\n  \r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            {user ? <Home /> : <Signin />}\r\n          </Route>\r\n          <Route exact path='/signin'>\r\n            {user ? <Redirect to='/' /> : <Signin />}\r\n          </Route>\r\n          <Route exact path='/signup'>\r\n            {user ? <Redirect to='/' /> : <Signup/>}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthContextProvider} from \"./Context/AuthContext\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthContextProvider>\r\n      <App />\r\n    </AuthContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}